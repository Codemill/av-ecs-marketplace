AWSTemplateFormatVersion: 2010-09-09
Description: This template will deploy a stack containing a VPC with public
  and private subnets.

Parameters:
  ApplicationTag:
    Type: String
    Default: accurate-video
    Description: Used to tag all resources
  VpcCidr:
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: What CIDR block should your VPC have? (e.g. 10.0.0.0/16)
    Default: 10.0.0.0/16

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network configuration"
        Parameters:
          - VpcCidr
      - Label:
          default: "Other"
        Parameters:
          - ApplicationTag

    ParameterLabels:
      ApplicationTag:
        default: Application Tag
      VpcCidr:
        default: VPC CIDR

Resources:
  ############################## VPC #############################
  ################################################################
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref VpcCidr
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - VPC

  ######################## Public Subnets ########################
  ################################################################
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref Vpc
      CidrBlock: !Select [0, !Cidr [!GetAtt Vpc.CidrBlock, 6, 8]]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Public Subnet One
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref Vpc
      CidrBlock: !Select [1, !Cidr [!GetAtt Vpc.CidrBlock, 6, 8]]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Public Subnet Two

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Internet Gateway
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref "InternetGateway"
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Public Route Table
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId: !Ref "PublicRouteTable"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "InternetGateway"
  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetOne
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetTwo
      RouteTableId: !Ref PublicRouteTable

  ######################## Private Subnets #######################
  ################################################################
  PrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref Vpc
      CidrBlock: !Select [3, !Cidr [!GetAtt Vpc.CidrBlock, 6, 8]]
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Private Subnet One
  PrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: { Ref: AWS::Region }
      VpcId: !Ref Vpc
      CidrBlock: !Select [4, !Cidr [!GetAtt Vpc.CidrBlock, 6, 8]]
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Private Subnet Two

  ElasticIpOne:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Elastic IP One

  NatGatewayOne:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIpOne.AllocationId
      SubnetId: !Ref PublicSubnetOne
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - NAT Gateway One
  PrivateRouteTableOne:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Private Route Table One
  PrivateRouteOne:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableOne
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayOne
  PrivateRouteTableOneAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableOne
      SubnetId: !Ref PrivateSubnetOne
  PrivateRouteTableTwo:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - Private Route Table Two
  PrivateRouteTwo:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableTwo
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayOne
  PrivateRouteTableTwoAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableTwo
      SubnetId: !Ref PrivateSubnetTwo

Outputs:
  VpcId:
    Description: The ID of the VPC that this stack is deployed in
    Value: !Ref Vpc
  PrivateSubnets:
    Description: Private subnets in the VPC
    Value: !Join [",", [!Ref PrivateSubnetOne, !Ref PrivateSubnetTwo]]
  PublicSubnets:
    Description: Public subnets in the VPC
    Value: !Join [",", [!Ref PublicSubnetOne, !Ref PublicSubnetTwo]]
