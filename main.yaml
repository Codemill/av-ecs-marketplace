AWSTemplateFormatVersion: 2010-09-09
Description: >
  Main template which will deploy infrastructure and services as nested stacks.

Parameters:
  AdapterRdsDbClass:
    Type: String
    Default: db.t3.small
    AllowedValues:
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.m5.large
    Description: The RDS Database class to use
  ApplicationTag:
    Type: String
    Default: accurate-video
    Description: Used to tag all resources
  CertificateArn:
    Type: String
    Description: SSL certificate ARN in CertificateManager which covers the domain name used for the load balancer
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 Hosted Zone Id
  KeycloakRdsDbClass:
    Type: String
    Default: db.t3.small
    AllowedValues:
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.m5.large
    Description: The RDS Database class to use
  LoadBalancerDomainName:
    Type: String
    Description: Domain name that will be given to the load balancer (e.g. av.example.com)
  LogsRetention:
    Type: Number
    Default: 14
    Description: Number of days that application logs are saved in CloudWatch Logs
  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The Private Subnets which the ECS Services and RDS Database will be deployed in (At least two)
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The Public Subnets which the Application Load Balancer will be deployed in (At least two)
  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: The VPC which AccurateVideo will be deployed in

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network
        Parameters:
          - Vpc
          - PrivateSubnets
          - PublicSubnets
      - Label:
          default: Database
        Parameters:
          - AdapterRdsDbClass
          - KeycloakRdsDbClass
      - Label:
          default: DNS
        Parameters:
          - HostedZoneId
          - LoadBalancerDomainName
          - CertificateArn
      - Label:
          default: Other configuration
        Parameters:
          - ApplicationTag
          - LogsRetention

    ParameterLabels:
      AdapterRdsDbClass:
        default: Adapter Database Class
      ApplicationTag:
        default: Application Tag
      CertificateArn:
        default: Certificate ARN
      HostedZoneId:
        default: HostedZone ID
      KeycloakRdsDbClass:
        default: Keycloak Database Class
      LoadBalancerDomainName:
        default: Load Balancer Domain Name
      LogsRetention:
        default: Application Logs Retention
      PrivateSubnets:
        default: Private Subnets
      PublicSubnets:
        default: Public Subnets
      Vpc:
        default: VPC ID

Mappings:
  Service:
    Adapter:
      ContainerCpu: 512
      ContainerMemory: 1024
      DesiredCount: 1
      ImageRepoName: 107410575319.dkr.ecr.eu-north-1.amazonaws.com/accurate-video-adapter
      ImageTag: 4.4.3-rc.9
      LoadbalancerListenerPath: "/api/*"
      LoadbalancerListenerPriority: 2
      RdsAllocatedStorage: 20
      RdsMaxAllocatedStorage: 100
    Analyze:
      ContainerCpu: 512
      ContainerMemory: 1024
      DesiredCount: 1
      ImageRepoName: 107410575319.dkr.ecr.eu-north-1.amazonaws.com/accurate-video-analyze
      ImageTag: 4.4.3-rc.9
      LoadbalancerListenerPath: "/api/analyze/*"
      LoadbalancerListenerPriority: 1
    Jobs:
      ContainerCpu: 512
      ContainerMemory: 1024
      DesiredCount: 1
      ImageRepoName: 107410575319.dkr.ecr.eu-north-1.amazonaws.com/accurate-video-jobs
      ImageTag: 4.4.3-rc.10
    Frontend:
      ContainerCpu: 256
      ContainerMemory: 512
      DesiredCount: 1
      ImageRepoName: 107410575319.dkr.ecr.eu-north-1.amazonaws.com/accurate-video-frontend
      ImageTag: 4.4.3-rc.9
      LoadbalancerListenerPath: "*"
      LoadbalancerListenerPriority: 4
    Keycloak:
      ContainerCpu: 512
      ContainerMemory: 1024
      DesiredCount: 1
      ImageRepoName: 107410575319.dkr.ecr.eu-north-1.amazonaws.com/accurate-video-keycloak
      ImageTag: 4.4.3-rc.9
      LoadbalancerListenerPath: "/auth*"
      LoadbalancerListenerPriority: 3
      RdsAllocatedStorage: 20
      RdsMaxAllocatedStorage: 21
  Common:
    CloudFormation:
      Bucket: https://s3-eu-north-1.amazonaws.com/av-marketplace-cloudformation

Resources:
  InfrastructureStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ApplicationTag: !Ref ApplicationTag
        CertificateArn: !Ref CertificateArn
        HostedZoneId: !Ref HostedZoneId
        LoadBalancerDomainName: !Sub "${LoadBalancerDomainName}."
        LogsRetention: !Ref LogsRetention
        PublicSubnets: !Join [",", !Ref PublicSubnets]
        Vpc: !Ref Vpc
      TemplateURL: !Sub
        - ${TemplatesS3Bucket}/infrastructure.yaml
        - TemplatesS3Bucket: !FindInMap [Common, CloudFormation, Bucket]
      TimeoutInMinutes: 30

  AdapterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AdapterSG: !GetAtt InfrastructureStack.Outputs.AdapterSecurityGroup
        ApplicationTag: !Ref ApplicationTag
        ContainerCpu: !FindInMap [Service, Adapter, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Adapter, ContainerMemory]
        DesiredCount: !FindInMap [Service, Adapter, DesiredCount]
        ImageRepoName: !FindInMap [Service, Adapter, ImageRepoName]
        ImageTag: !FindInMap [Service, Adapter, ImageTag]
        KeycloakBackendSecret: !GetAtt KeycloakStack.Outputs.BackendSecretArn
        KeycloakHost: !Sub "https://${LoadBalancerDomainName}"
        LoadbalancerListenerPriority: !FindInMap [Service, Adapter, LoadbalancerListenerPriority]
        LoadbalancerListenerPath: !FindInMap [Service, Adapter, LoadbalancerListenerPath]
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        PrivateDNSNamespace: !GetAtt InfrastructureStack.Outputs.PrivateDnsNamespace
        PrivateSubnets: !Join [",", !Ref PrivateSubnets]
        PublicLoadbalancerListenerArn: !GetAtt InfrastructureStack.Outputs.PublicListener
        RdsAllocatedStorage: !FindInMap [Service, Adapter, RdsAllocatedStorage]
        RdsMaxAllocatedStorage: !FindInMap [Service, Adapter, RdsMaxAllocatedStorage]
        RdsDbClass: !Ref AdapterRdsDbClass
        RdsDbSecurityGroup: !GetAtt InfrastructureStack.Outputs.AdapterRdsDbSecurityGroup
        Vpc: !Ref Vpc
        VpcCidrBlock: !GetAtt GetVpcCidrLambdaStack.Outputs.CidrBlock
      TemplateURL: !Sub
        - ${TemplatesS3Bucket}/adapter.yaml
        - TemplatesS3Bucket: !FindInMap [Common, CloudFormation, Bucket]
      TimeoutInMinutes: 30

  FrontendStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ApplicationTag: !Ref ApplicationTag
        ContainerCpu: !FindInMap [Service, Frontend, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Frontend, ContainerMemory]
        DesiredCount: !FindInMap [Service, Frontend, DesiredCount]
        FrontendSG: !GetAtt InfrastructureStack.Outputs.FrontendSecurityGroup
        ImageRepoName: !FindInMap [Service, Frontend, ImageRepoName]
        ImageTag: !FindInMap [Service, Frontend, ImageTag]
        LoadbalancerListenerPriority: !FindInMap [Service, Frontend, LoadbalancerListenerPriority]
        LoadbalancerListenerPath: !FindInMap [Service, Frontend, LoadbalancerListenerPath]
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        PrivateSubnets: !Join [",", !Ref PrivateSubnets]
        PublicLoadbalancerListenerArn: !GetAtt InfrastructureStack.Outputs.PublicListener
        Vpc: !Ref Vpc
      TemplateURL: !Sub
        - ${TemplatesS3Bucket}/frontend.yaml
        - TemplatesS3Bucket: !FindInMap [Common, CloudFormation, Bucket]
      TimeoutInMinutes: 30

  AnalyzeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AnalyzeSG: !GetAtt InfrastructureStack.Outputs.AnalyzeSecurityGroup
        ApplicationTag: !Ref ApplicationTag
        ContainerCpu: !FindInMap [Service, Analyze, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Analyze, ContainerMemory]
        DesiredCount: !FindInMap [Service, Analyze, DesiredCount]
        ImageRepoName: !FindInMap [Service, Analyze, ImageRepoName]
        ImageTag: !FindInMap [Service, Analyze, ImageTag]
        LoadbalancerListenerPriority: !FindInMap [Service, Analyze, LoadbalancerListenerPriority]
        LoadbalancerListenerPath: !FindInMap [Service, Analyze, LoadbalancerListenerPath]
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        PrivateSubnets: !Join [",", !Ref PrivateSubnets]
        PublicLoadbalancerListenerArn: !GetAtt InfrastructureStack.Outputs.PublicListener
        Vpc: !Ref Vpc
      TemplateURL: !Sub
        - ${TemplatesS3Bucket}/analyze.yaml
        - TemplatesS3Bucket: !FindInMap [Common, CloudFormation, Bucket]
      TimeoutInMinutes: 30

  JobsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AdapterServiceName: !GetAtt AdapterStack.Outputs.ServiceName
        ApplicationTag: !Ref ApplicationTag
        AuthRunnerSecretArn: !GetAtt AdapterStack.Outputs.AuthRunnerSecretArn
        ContainerCpu: !FindInMap [Service, Jobs, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Jobs, ContainerMemory]
        DesiredCount: !FindInMap [Service, Jobs, DesiredCount]
        ImageRepoName: !FindInMap [Service, Jobs, ImageRepoName]
        ImageTag: !FindInMap [Service, Jobs, ImageTag]
        JobsSG: !GetAtt InfrastructureStack.Outputs.JobsSecurityGroup
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        PrivateDNSNamespace: !GetAtt InfrastructureStack.Outputs.PrivateDnsNamespace
        PrivateSubnets: !Join [",", !Ref PrivateSubnets]
        VpcCidrBlock: !GetAtt GetVpcCidrLambdaStack.Outputs.CidrBlock
      TemplateURL: !Sub
        - ${TemplatesS3Bucket}/jobs.yaml
        - TemplatesS3Bucket: !FindInMap [Common, CloudFormation, Bucket]
      TimeoutInMinutes: 30

  KeycloakStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ApplicationTag: !Ref ApplicationTag
        ContainerCpu: !FindInMap [Service, Keycloak, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Keycloak, ContainerMemory]
        DesiredCount: !FindInMap [Service, Keycloak, DesiredCount]
        FrontendUrl: !Sub https://${LoadBalancerDomainName}/
        ImageRepoName: !FindInMap [Service, Keycloak, ImageRepoName]
        ImageTag: !FindInMap [Service, Keycloak, ImageTag]
        KeycloakSG: !GetAtt InfrastructureStack.Outputs.KeycloakSecurityGroup
        LoadbalancerListenerPriority: !FindInMap [Service, Keycloak, LoadbalancerListenerPriority]
        LoadbalancerListenerPath: !FindInMap [Service, Keycloak, LoadbalancerListenerPath]
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        PrivateSubnets: !Join [",", !Ref PrivateSubnets]
        PublicLoadbalancerListenerArn: !GetAtt InfrastructureStack.Outputs.PublicListener
        RdsAllocatedStorage: !FindInMap [Service, Keycloak, RdsAllocatedStorage]
        RdsMaxAllocatedStorage: !FindInMap [Service, Keycloak, RdsMaxAllocatedStorage]
        RdsDbClass: !Ref KeycloakRdsDbClass
        RdsDbSecurityGroup: !GetAtt InfrastructureStack.Outputs.KeycloakRdsDbSecurityGroup
        Vpc: !Ref Vpc
      TemplateURL: !Sub
        - ${TemplatesS3Bucket}/keycloak.yaml
        - TemplatesS3Bucket: !FindInMap [Common, CloudFormation, Bucket]
      TimeoutInMinutes: 30

  GetVpcCidrLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ApplicationTag: !Ref ApplicationTag
        Vpc: !Ref Vpc
      TemplateURL: !Sub
        - ${TemplatesS3Bucket}/get-vpc-cidr-lambda.yaml
        - TemplatesS3Bucket: !FindInMap [Common, CloudFormation, Bucket]
      TimeoutInMinutes: 30
