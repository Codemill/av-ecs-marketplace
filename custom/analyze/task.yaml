AWSTemplateFormatVersion: 2010-09-09
Description: ""

Parameters:
  ApplicationTag:
    Type: String
    Description: Used to tag all resources
  ContainerCpu:
    Type: Number
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Description: How much memory in megabytes to give the container
  ImageRepoName:
    Type: String
    Description: The ecr repo and tag to use for image deployment
  ImageTag:
    Type: String
    Description: The ecr repo and tag to use for image deployment
  LogGroupName:
    Type: String
    Description: CloudWatch Log Group Name
  RegistryCredentials:
    Type: String
    Description: Registry Credentials
  ApAnalyzeCacheDays:
    Type: String
  ApAnalyzeCacheDir:
    Type: String
  QuarkusHttpCors:
    Type: String
  HttpPathPrefix:
    Type: String

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: av-analyze
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: av-analyze
          Cpu: !Ref ContainerCpu
          Memory: !Ref ContainerMemory
          Image: !Sub ${ImageRepoName}:${ImageTag}
          RepositoryCredentials:
            CredentialsParameter: !Ref "RegistryCredentials"
          Command:
            - "mkdir /tmp/wav && java -jar accurate-analyze.jar"
          EntryPoint:
            - "sh"
            - "-c"
          PortMappings:
            - ContainerPort: 8080
          Environment:
            - Name: AP_ANALYZE_CACHE_DAYS
              Value: !Ref ApAnalyzeCacheDays
            - Name: AP_ANALYZE_CACHE_DIR
              Value: !Ref ApAnalyzeCacheDir
            - Name: QUARKUS_HTTP_CORS
              Value: !Ref QuarkusHttpCors
            - Name: HTTP_PATH_PREFIX
              Value: !Ref HttpPathPrefix
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroupName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: av-analyze
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: [sts:AssumeRole]
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource: !Ref RegistryCredentials
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: [sts:AssumeRole]
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:HeadObject
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

Outputs:
  TaskDefinition:
    Description: Task Definition
    Value: !Ref TaskDefinition
