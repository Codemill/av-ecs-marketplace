AWSTemplateFormatVersion: 2010-09-09
Description: This template will deploy a public Application Load Balancer
  used to route traffic to the containers in the private subnets.

Parameters:
  ApplicationTag:
    Type: String
    Description: Used to tag all resources
  HostedZoneId:
    Type: String
    Description: Route53 Hosted Zone Id
  DomainName:
    Type: String
    Description: Domain name that will be given to the load balancer (e.g. av.example.com)
  PublicSubnets:
    Type: String
    Description: Public Subnets (comma separated)
  Vpc:
    Type: String
    Description: VPC ID

Conditions:
  UseDefaultDomain:
    !And
      - !Equals [!Ref HostedZoneId, ""]
      - !Equals [!Ref DomainName, ""]
  CreateCustomDomain:
    !Not [Condition: UseDefaultDomain]

Resources:
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "30"
      Subnets: !Split [ ',', !Ref PublicSubnets ]
      SecurityGroups: [!Ref SecurityGroup]
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  PublicLoadBalancerListenerHttp:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - !If
          - UseDefaultDomain
          - FixedResponseConfig:
              ContentType: text/plain
              MessageBody: "Not implemented"
              StatusCode: "200"
            Type: fixed-response
          - RedirectConfig:
              Host: "#{host}"
              Path: "/#{path}"
              Port: "443"
              Protocol: HTTPS
              Query: "#{query}"
              StatusCode: HTTP_301
            Type: redirect
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 80
      Protocol: HTTP

  PublicLoadBalancerListenerHttps:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: CreateCustomDomain
    Properties:
      DefaultActions:
        - FixedResponseConfig:
            ContentType: text/plain
            MessageBody: "Not implemented"
            StatusCode: "200"
          Type: fixed-response
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: "ELBSecurityPolicy-2016-08"
      Certificates:
        - CertificateArn: !Ref Certificate

  AliasRecord:
    Type: AWS::Route53::RecordSet
    Condition: CreateCustomDomain
    Properties:
      AliasTarget:
        DNSName: !GetAtt PublicLoadBalancer.DNSName
        HostedZoneId: !GetAtt PublicLoadBalancer.CanonicalHostedZoneID
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${DomainName}."
      Type: A

  Certificate:
    Type: AWS::CertificateManager::Certificate
    Condition: CreateCustomDomain
    Properties:
      DomainName: !Ref DomainName
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - ALB Certificate
      ValidationMethod: DNS

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
        - Key: Name
          Value: AccurateVideo - ALB SG

Outputs:
  ExternalUrl:
    Description: The url of the external load balancer
    Value: !If
      - CreateCustomDomain
      - !Sub https://${DomainName}
      - !Sub http://${PublicLoadBalancer.DNSName}
  PublicListener:
    Description: The ARN of the public load balancer's Listener
    Value: !If
      - CreateCustomDomain
      - !Ref PublicLoadBalancerListenerHttps
      - !Ref PublicLoadBalancerListenerHttp
  SecurityGroup:
    Description: The SecurityGroup attached to the public load balancer
    Value: !Ref SecurityGroup
