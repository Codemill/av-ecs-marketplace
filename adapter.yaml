AWSTemplateFormatVersion: 2010-09-09
Description: Deploy a service on AWS Fargate, hosted in a private subnet, but accessible via a public load balancer.

Parameters:
  AdapterSG:
    Type: String
    Description: Adapter Security Group
  ApplicationTag:
    Type: String
    Description: Used to tag all resources
  ContainerCpu:
    Type: Number
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Description: How much memory in megabytes to give the container
  DesiredCount:
    Type: Number
    Description: How many copies of the service task to run
  ImageRepoName:
    Type: String
    Description: The ecr repo to use for image deployment
  ImageTag:
    Type: String
    Description: The ecr tag to use for image deployment
  LogGroupName:
    Type: String
    Description: CloudWatch Log Group Name
  PrivateDNSNamespace:
    Type: String
    Description: Private DNS Namespace
  PrivateSubnets:
    Type: String
    Description: Private Subnets
  PublicLoadbalancerListenerArn:
    Type: String
    Description: Public Loadbalancer Listener Arn
  RdsDbAllocatedStorage:
    Type: String
    Description: Size of the database in GB
  RdsDbClass:
    Type: String
    AllowedValues:
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.m5.large
    Description: The RDS Database class to use
  RdsDbSecurityGroup:
    Type: String
    Description: Adapter RDS Security Group
  Vpc:
    Type: String
    Description: VPC ID
  VpcCidrBlock:
    Type: String
    Description: VPC CIDR Block

Resources:
  ################################ --- ################################
  #####################################################################
  AuthRunnerSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Auth Runner secret
      GenerateSecretString:
        SecretStringTemplate: '{"username": "runner"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  ################################ RDS ################################
  #####################################################################
  RdsDbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: AccurateVideo-Adapter-DB-Subnet-group
      SubnetIds: !Split [ ',', !Ref PrivateSubnets ]
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  RdsInstanceSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: RDS instance secret
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref RdsDbAllocatedStorage
      DBInstanceClass: !Ref RdsDbClass
      DBName: accurate-video
      DBSubnetGroupName: !Ref RdsDbSubnetGroup
      DeletionProtection: true
      Engine: Postgres
      MasterUsername: !Sub "{{resolve:secretsmanager:${RdsInstanceSecret}::username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${RdsInstanceSecret}::password}}"
      MultiAZ: true
      StorageEncrypted: true
      VPCSecurityGroups:
        - !Ref RdsDbSecurityGroup
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot

  ################################ ECS ################################
  #####################################################################
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: av-adapter
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: av-adapter
          Cpu: !Ref ContainerCpu
          Memory: !Ref ContainerMemory
          Image: !Sub ${ImageRepoName}:${ImageTag}
          PortMappings:
            - ContainerPort: 8080
            - ContainerPort: 5701
            - ContainerPort: 5699
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroupName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: av-adapter
          Environment:
            - Name: ACL_ENABLED
              Value: "false"
            - Name: ACL_STORAGE_ENABLED
              Value: "false"
            - Name: AUTH_ENABLED
              Value: "true"
            - Name: AUTH_FALLBACK_USERNAME
              Value: "false"
            - Name: AUTH_JWT_ENABLED
              Value: "true"
            - Name: AUTH_JWT_ISSUER
              Value: https://keycloak.codemill.cloud/auth/realms/av-dev
            - Name: AUTH_JWT_JWK_FILENAME
              Value: https://keycloak.codemill.cloud/auth/realms/av-dev/protocol/openid-connect/certs
            - Name: AUTH_JWT_USERNAME
              Value: preferred_username
            - Name: DELETION_PHYSICAL_FILE_ENABLED
              Value: "false"
            - Name: QUARKUS_DATASOURCE_DRIVER
              Value: org.postgresql.Driver
            - Name: QUARKUS_FLYWAY_BASELINE-ON-MIGRATE
              Value: "false"
            - Name: QUARKUS_FLYWAY_MIGRATE-AT-START
              Value: "false"
            - Name: QUARKUS_HIBERNATE-ORM_DIALECT
              Value: org.hibernate.dialect.HSQLDialect
            - Name: QUARKUS_HIBERNATE-ORM_LOG_SQL
              Value: "false"
            - Name: QUARKUS_HTTP_CORS
              Value: "true"
            - Name: QUARKUS_LOG_LEVEL
              Value: INFO
            - Name: QUARKUS_SECURITY_USERS_FILE_ENABLED
              Value: "false"
            - Name: QUARKUS_VERTX_CLUSTER_HOST
              Value: "0.0.0.0"
            - Name: QUARKUS_VERTX_CLUSTER_PUBLIC_HOST
              Value: av-adapter.av.local
            - Name: QUARKUS_VERTX_CLUSTER_PORT
              Value: "5699"
            - Name: QUARKUS_VERTX_CLUSTER_PUBLIC_PORT
              Value: "5699"
            - Name: HTTP_PATH_PREFIX
              Value: /api
            - Name: CLUSTER_XML
              Value: /opt/ecs-cluster.xml

              #KEEP everything under this line
            - Name: DB_HOST
              Value: !GetAtt DBInstance.Endpoint.Address
            - Name: HZE_CLUSTER_NAME_REGEXP
              Value: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/accurate-video
            - Name: HZE_SERVICE_NAME_REGEXP
              Value: !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/accurate-video/\\S+-(jobs|adapter)-\\S+"
            - Name: KEYCLOAK_HOST
              Value: ""
            - Name: KEYCLOAK_BACKEND_PASSWORD
              Value: ""
            - Name: HZE_IPV4_CIDR
              Value: !Ref VpcCidrBlock
          Secrets:
              #KEEP everything under this line
            - Name: DB_USER
              ValueFrom: !Sub "${RdsInstanceSecret}:username::"
            - Name: DB_PASS
              ValueFrom: !Sub "${RdsInstanceSecret}:password::"
            - Name: AUTH_RUNNER_USERNAME
              ValueFrom: !Sub "${AuthRunnerSecret}:username::"
            - Name: AUTH_RUNNER_PASSWORD
              ValueFrom: !Sub "${AuthRunnerSecret}:password::"
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSMarketplaceMeteringRegisterUsage
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Ref RdsInstanceSecret
                  - !Ref AuthRunnerSecret
              - Effect: Allow
                Action:
                  - ecs:ListClusters
                  - ecs:ListServices
                  - ecs:ListTasks
                  - ecs:DescribeTasks
                Resource: "*"
              - Effect: Allow
                Action:
                  - aws-marketplace:RegisterUsage
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:HeadObject
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  DiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: Discovery Service for the Demo Application
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: av-adapter
      NamespaceId: !Ref PrivateDNSNamespace
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      Cluster: accurate-video
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref DesiredCount
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref AdapterSG
          Subnets: !Split [ ',', !Ref PrivateSubnets ]
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: av-adapter
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryService.Arn
          Port: 8080
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 120
      HealthCheckPath: /api/asset
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 60
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "15"
      Matcher:
        HttpCode: "200,401"
      TargetType: ip
      Name: av-adapter
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      Conditions:
        - Field: path-pattern
          Values: [/api/*]
      ListenerArn: !Ref PublicLoadbalancerListenerArn
      Priority: 2

Outputs:
  AuthRunnerSecretArn:
    Description: Secrets Manager Secret ARN for Auth Runner
    Value: !Ref AuthRunnerSecret

  ServiceName:
    Description: Service name
    Value: !GetAtt DiscoveryService.Name
