AWSTemplateFormatVersion: "2010-09-09"
Description: ""

Parameters:
  ApplicationTag:
    Type: String
    Description: Used to tag all resources
  ContainerCpu:
    Type: Number
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Description: How much memory in megabytes to give the container
  FrontendUrl:
    Type: String
    Description: URL for frontend service
  ImageRepoName:
    Type: String
    Description: The ecr repo and tag to use for image deployment
  ImageTag:
    Type: String
    Description: The ecr repo and tag to use for image deployment
  LogGroupName:
    Type: String
    Description: "CloudWatch Log Group Name"
  KeycloakSecret:
    Type: String
    Description: Keycloak Secret
  BackendSecret:
    Type: String
    Description: Backend Secret
  AdminSecret:
    Type: String
    Description: Admin Secret
  RdsInstanceSecret:
    Type: String
    Description: RDS Instance Secret
  DbEndpoint:
    Type: String
    Description: DB Endpoint
Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: av-keycloak
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: av-keycloak
          Cpu: !Ref ContainerCpu
          Memory: !Ref ContainerMemory
          Image: !Sub ${ImageRepoName}:${ImageTag}
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: !Ref LogGroupName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: av-keycloak
          Environment:
            - Name: DB_ADDR
              Value: !Ref DbEndpoint
            - Name: AV_FRONTEND_URL
              Value: !Ref FrontendUrl
          Secrets:
            - Name: DB_USER
              ValueFrom: !Sub "${RdsInstanceSecret}:username::"
            - Name: DB_PASSWORD
              ValueFrom: !Sub "${RdsInstanceSecret}:password::"
            - Name: AV_BACKEND_PASSWORD
              ValueFrom: !Sub "${BackendSecret}:password::"
            - Name: AV_ADMIN_PASSWORD
              ValueFrom: !Sub "${AdminSecret}:password::"
            - Name: KEYCLOAK_USER
              ValueFrom: !Sub "${KeycloakSecret}:username::"
            - Name: KEYCLOAK_PASSWORD
              ValueFrom: !Sub "${KeycloakSecret}:password::"
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Ref RdsInstanceSecret
                  - !Ref BackendSecret
                  - !Ref KeycloakSecret
                  - !Ref AdminSecret
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

Outputs:
  BackendSecretArn:
    Description: Secrets Manager Secret ARN for Keycloak Backend
    Value: !Ref BackendSecret
  TaskDefinition:
    Description: Task Definition
    Value: !Ref TaskDefinition
