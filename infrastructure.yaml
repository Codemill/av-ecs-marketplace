AWSTemplateFormatVersion: 2010-09-09
Description: This template will deploy a Cloud Map private DNS namespace which
  allows services to find each other without going through the ALB. A RDS
  Postgres database instance will also be deployed, as well as an S3 bucket
  containing configuration files used by the services. Changes to the
  configuration files will notify SNS which will later trigger a lambda to
  re-deploy the service. Finally there is a CloudWatch log group which the
  different services will send their application logs to.

Parameters:
  ApplicationTag:
    Type: String
    Default: accurate-video
    Description: Used to tag all resources
  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public Subnets
  LogsRetention:
    Type: Number
    Default: 14
    Description: Number of days that application logs are saved
  CertificateArn:
    Type: String
    Description: SSL certificate ARN in CertificateManager which covers the domain name used for the load balancer
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 Hosted Zone Id
  LoadBalancerDomainName:
    Type: String
    Description: Domain name that will be given to the load balancer, including a trailing dot (e.g. av.example.com.)

Resources:
  PrivateDnsNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: av.local
      Vpc: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: accurate-video
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  ########################## Load Balancer ############################
  #####################################################################
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "30"
      Subnets: !Ref PublicSubnets
      SecurityGroups: [!Ref PublicLoadBalancerSecurityGroup]
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  PublicLoadBalancerListenerHttp:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - RedirectConfig:
            Host: "#{host}"
            Path: "/#{path}"
            Port: "443"
            Protocol: HTTPS
            Query: "#{query}"
            StatusCode: HTTP_301
          Type: redirect
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 80
      Protocol: HTTP

  PublicLoadBalancerListenerHttps:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - FixedResponseConfig:
            ContentType: text/plain
            MessageBody: "Not implemented"
            StatusCode: "200"
          Type: fixed-response
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: "ELBSecurityPolicy-2016-08"
      Certificates:
        - CertificateArn: !Ref CertificateArn

  AliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt PublicLoadBalancer.DNSName
        HostedZoneId: !GetAtt PublicLoadBalancer.CanonicalHostedZoneID
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref LoadBalancerDomainName
      Type: A

  ######################### Security Groups ###########################
  #####################################################################
  PublicLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  AdapterRdsDbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the Adapter RDS DB instance
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  AdapterRdsDbSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from Adapter service
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref AdapterSecurityGroup
      GroupId: !Ref AdapterRdsDbSecurityGroup

  AdapterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Adapter service
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  AdapterSecurityGroupIngressAlb:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the public ALB
      IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080
      SourceSecurityGroupId: !Ref PublicLoadBalancerSecurityGroup
      GroupId: !Ref AdapterSecurityGroup

  AdapterSecurityGroupIngressJobs:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Jobs service
      IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080
      SourceSecurityGroupId: !Ref JobsSecurityGroup
      GroupId: !Ref AdapterSecurityGroup

  AdapterSecurityGroupIngressJobsHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Jobs service
      IpProtocol: tcp
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref JobsSecurityGroup
      GroupId: !Ref AdapterSecurityGroup

  AdapterSecurityGroupIngressAdapterHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Adapter service
      IpProtocol: tcp
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref AdapterSecurityGroup
      GroupId: !Ref AdapterSecurityGroup

  FrontendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Frontend service
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  FrontendSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the public ALB
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId: !Ref PublicLoadBalancerSecurityGroup
      GroupId: !Ref FrontendSecurityGroup

  AnalyzeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Analyze service
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  AnalyzeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the public ALB
      IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080
      SourceSecurityGroupId: !Ref PublicLoadBalancerSecurityGroup
      GroupId: !Ref AnalyzeSecurityGroup

  JobsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database access from adapter/backend
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  JobsSecurityGroupIngressAdapterHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Adapter service
      IpProtocol: tcp
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref AdapterSecurityGroup
      GroupId: !Ref JobsSecurityGroup

  JobsSecurityGroupIngressJobsHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Jobs service
      IpProtocol: tcp
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref JobsSecurityGroup
      GroupId: !Ref JobsSecurityGroup

  ######################## CloudWatch Log Group #######################
  #####################################################################
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "accurate-video"
      RetentionInDays: !Ref LogsRetention

Outputs:
  LogGroup:
    Description: The name of the Log Group
    Value: !Ref LogGroup
  AdapterRdsDbSecurityGroup:
    Description: Security group for the RDS instance
    Value: !Ref AdapterRdsDbSecurityGroup
  AdapterSecurityGroup:
    Description: Security group for the Adapter service
    Value: !Ref AdapterSecurityGroup
  FrontendSecurityGroup:
    Description: Security group for the Frontend service
    Value: !Ref FrontendSecurityGroup
  AnalyzeSecurityGroup:
    Description: Security group for the Analyze service
    Value: !Ref AnalyzeSecurityGroup
  JobsSecurityGroup:
    Description: Security group for the Jobs service
    Value: !Ref JobsSecurityGroup
  PublicListener:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref PublicLoadBalancerListenerHttps
  PrivateDnsNamespace:
    Description: Private DNS Namespace
    Value: !Ref PrivateDnsNamespace
