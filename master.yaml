AWSTemplateFormatVersion: 2010-09-09
Description: >
  Master template which will deploy infrastructure and services as nested stacks.

Parameters:
  TemplatesS3Bucket:
    Description: The S3 bucket containing the CloudFormation templates
    Type: String
    Default: https://s3-eu-north-1.amazonaws.com/<BUCKET_NAME>
  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: The VPC which AccurateVideo will be deployed in
  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The Private Subnets which the ECS Services and RDS Database will be deployed in
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The Public Subnets which the Application Load Balancer will be deployed in
  ApplicationTag:
    Type: String
    Default: accurate-video
    Description: Used to tag all resources
  LogsRetention:
    Type: Number
    Default: 14
    Description: Number of days that application logs are saved
  CertificateArn:
    Type: String
    Description: SSL certificate ARN in CertificateManager which covers the domain name used for the load balancer
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 Hosted Zone Id
  LoadBalancerDomainName:
    Type: String
    Description: Domain name that will be given to the load balancer, including a trailing dot (e.g. av.example.com.)

  AdapterRdsDbAllocatedStorage:
    Type: String
    Default: "5"
    Description: Size of the database in GB
  AdapterRdsDbClass:
    Type: String
    Default: db.t3.small
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
    Description: The RDS Database class to use

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - Vpc
          - PrivateSubnets
          - PublicSubnets
      - Label:
          default: Database configuration
        Parameters:
          - AdapterRdsDbAllocatedStorage
          - AdapterRdsDbClass
      - Label:
          default: DNS configuration
        Parameters:
          - CertificateArn
          - HostedZoneId
          - LoadBalancerDomainName
      - Label:
          default: Other configuration
        Parameters:
          - ApplicationTag
          - LogsRetention
          - TemplatesS3Bucket

    ParameterLabels:
      Vpc:
        default: VPC ID
      PrivateSubnets:
        default: Private Subnets
      PublicSubnets:
        default: Public Subnets
      CertificateArn:
        default: Certificate Arn
      HostedZoneId:
        default: HostedZone ID
      LoadBalancerDomainName:
        default: Load Balancer Domain Name
      ApplicationTag:
        default: Application Tag
      LogsRetention:
        default: Application Logs Retention

Mappings:
  Service:
    Adapter:
      ContainerCpu: 256
      ContainerMemory: 1024
      DesiredCount: 2
      ImageRepoName: ""
      ImageTag: ""
    Analyze:
      ContainerCpu: 256
      ContainerMemory: 512
      DesiredCount: 2
      ImageRepoName: ""
      ImageTag: ""
      ApAnalyzeCacheDays: ""
      ApAnalyzeCacheDir: ""
      QuarkusHttpCors: ""
    Jobs:
      ContainerCpu: 512
      ContainerMemory: 1024
      DesiredCount: 2
      ImageRepoName: ""
      ImageTag: ""
      BlackFrameLocation: ""
      BlackFrameDuration: ""
      BlackFrameNumerator: ""
      BlackFrameDenominator: ""
      AwsRole: ""
    Frontend:
      ContainerCpu: 256
      ContainerMemory: 512
      DesiredCount: 2
      ImageRepoName: ""
      ImageTag: ""

Resources:
  InfrastructureStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ApplicationTag: !Ref ApplicationTag
        Vpc: !Ref Vpc
        PublicSubnets: !Ref PublicSubnets
        CertificateArn: !Ref CertificateArn
        HostedZoneId: !Ref HostedZoneId
        LoadBalancerDomainName: !Ref LoadBalancerDomainName
        LogsRetention: !Ref LogsRetention
      TemplateURL: !Sub ${TemplatesS3Bucket}/infrastructure.yaml
      TimeoutInMinutes: 30

  AdapterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Vpc: !Ref Vpc
        PrivateSubnets: !Ref PrivateSubnets
        ImageRepoName: !FindInMap [Service, Adapter, ImageRepoName]
        ImageTag: !FindInMap [Service, Adapter, ImageTag]
        ContainerCpu: !FindInMap [Service, Adapter, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Adapter, ContainerMemory]
        DesiredCount: !FindInMap [Service, Adapter, DesiredCount]
        PublicLoadbalancerListenerArn: !GetAtt InfrastructureStack.Outputs.PublicListener
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        PrivateDNSNamespace: !GetAtt InfrastructureStack.Outputs.PrivateDnsNamespace
        AdapterSG: !GetAtt InfrastructureStack.Outputs.AdapterSecurityGroup
        ApplicationTag: !Ref ApplicationTag
        RdsDbAllocatedStorage: !Ref AdapterRdsDbAllocatedStorage 
        RdsDbClass: !Ref AdapterRdsDbClass 
        RdsDbSecurityGroup: !GetAtt InfrastructureStack.Outputs.AdapterRdsDbSecurityGroup
      TemplateURL: !Sub ${TemplatesS3Bucket}/adapter.yaml
      TimeoutInMinutes: 30

  FrontendStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Vpc: !Ref Vpc
        PrivateSubnets: !Ref PrivateSubnets
        ImageRepoName: !FindInMap [Service, Frontend, ImageRepoName]
        ImageTag: !FindInMap [Service, Frontend, ImageTag]
        ContainerCpu: !FindInMap [Service, Frontend, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Frontend, ContainerMemory]
        DesiredCount: !FindInMap [Service, Frontend, DesiredCount]
        ApplicationTag: !Ref ApplicationTag
        PublicLoadbalancerListenerArn: !GetAtt InfrastructureStack.Outputs.PublicListener
        FrontendSettingsUpdatedTopicArn: !GetAtt ConfigBucketStack.Outputs.FrontendSettingsUpdatedTopicArn
        ConfigBucketName: !GetAtt ConfigBucketStack.Outputs.ConfigBucketName
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        FrontendSG: !GetAtt InfrastructureStack.Outputs.FrontendSecurityGroup
      TemplateURL: !Sub ${TemplatesS3Bucket}/frontend.yaml
      TimeoutInMinutes: 30

  AnalyzeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Vpc: !Ref Vpc
        PrivateSubnets: !Ref PrivateSubnets
        ImageRepoName: !FindInMap [Service, Analyze, ImageRepoName]
        ImageTag: !FindInMap [Service, Analyze, ImageTag]
        ContainerCpu: !FindInMap [Service, Analyze, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Analyze, ContainerMemory]
        DesiredCount: !FindInMap [Service, Analyze, DesiredCount]
        ApplicationTag: !Ref ApplicationTag
        ApAnalyzeCacheDays: !FindInMap [Service, Analyze, ApAnalyzeCacheDays]
        ApAnalyzeCacheDir: !FindInMap [Service, Analyze, ApAnalyzeCacheDir]
        QuarkusHttpCors: !FindInMap [Service, Analyze, QuarkusHttpCors]
        PublicLoadbalancerListenerArn: !GetAtt InfrastructureStack.Outputs.PublicListener
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        AnalyzeSG: !GetAtt InfrastructureStack.Outputs.AnalyzeSecurityGroup
        PrivateDNSNamespace: !GetAtt InfrastructureStack.Outputs.PrivateDnsNamespace
      TemplateURL: !Sub ${TemplatesS3Bucket}/analyze.yaml
      TimeoutInMinutes: 30
  
  JobsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PrivateSubnets: !Ref PrivateSubnets
        ImageRepoName: !FindInMap [Service, Jobs, ImageRepoName]
        ImageTag: !FindInMap [Service, Jobs, ImageTag]
        ContainerCpu: !FindInMap [Service, Jobs, ContainerCpu]
        ContainerMemory: !FindInMap [Service, Jobs, ContainerMemory]
        DesiredCount: !FindInMap [Service, Jobs, DesiredCount]
        ApplicationTag: !Ref ApplicationTag
        BlackFrameLocation: !FindInMap [Service, Jobs, BlackFrameLocation]
        BlackFrameDuration: !FindInMap [Service, Jobs, BlackFrameDuration]
        BlackFrameNumerator: !FindInMap [Service, Jobs, BlackFrameNumerator]
        BlackFrameDenominator: !FindInMap [Service, Jobs, BlackFrameDenominator]
        AwsRole: !FindInMap [Service, Jobs, AwsRole]
        LogGroupName: !GetAtt InfrastructureStack.Outputs.LogGroup
        JobsSG: !GetAtt InfrastructureStack.Outputs.JobsSecurityGroup
        AuthRunnerSecretArn: !GetAtt AdapterStack.Outputs.AuthRunnerSecretArn
        PrivateDNSNamespace: !GetAtt InfrastructureStack.Outputs.PrivateDnsNamespace
        AdapterServiceName: !GetAtt AdapterStack.Outputs.ServiceName
      TemplateURL: !Sub ${TemplatesS3Bucket}/jobs.yaml
      TimeoutInMinutes: 30
  
  ConfigBucketStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ApplicationTag: !Ref ApplicationTag
      TemplateURL: !Sub ${TemplatesS3Bucket}/config-bucket.yaml
      TimeoutInMinutes: 30